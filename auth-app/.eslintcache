[{"/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/index.js":"1","/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/App.js":"2","/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/reportWebVitals.js":"3","/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/firebase.js":"4","/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/babel.config.js":"5","/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/Firebase.js":"6","/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/Components/LandingPage.js":"7","/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/Components/Profile.js":"8","/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/Components/Home.js":"9","/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/Components/Data.js":"10","/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/Components/Nav.js":"11","/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/Components/Histogram.js":"12","/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/Components/BarGraph.js":"13","/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/Components/MoodData.js":"14","/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/Components/WebData.js":"15","/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/Components/GetDate.js":"16"},{"size":500,"mtime":1610560075137,"results":"17","hashOfConfig":"18"},{"size":492,"mtime":1611815428916,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1610178542704,"results":"20","hashOfConfig":"18"},{"size":626,"mtime":1610216556933,"results":"21","hashOfConfig":"18"},{"size":550,"mtime":1610561589252,"results":"22","hashOfConfig":"18"},{"size":738,"mtime":1610824693907,"results":"23","hashOfConfig":"18"},{"size":1073,"mtime":1610825806831,"results":"24","hashOfConfig":"18"},{"size":1660,"mtime":1611815656653,"results":"25","hashOfConfig":"18"},{"size":572,"mtime":1611815683025,"results":"26","hashOfConfig":"18"},{"size":4083,"mtime":1611815744161,"results":"27","hashOfConfig":"18"},{"size":545,"mtime":1611815666693,"results":"28","hashOfConfig":"18"},{"size":7210,"mtime":1611714070865,"results":"29","hashOfConfig":"18"},{"size":5322,"mtime":1611719662374,"results":"30","hashOfConfig":"18"},{"size":1084,"mtime":1611815804842,"results":"31","hashOfConfig":"18"},{"size":1374,"mtime":1611815708697,"results":"32","hashOfConfig":"18"},{"size":196,"mtime":1611815497951,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"jw2udo",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/index.js",[],["70","71"],"/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/App.js",[],"/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/reportWebVitals.js",[],"/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/firebase.js",[],"/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/babel.config.js",[],"/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/Firebase.js",[],"/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/Components/LandingPage.js",[],"/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/Components/Profile.js",[],"/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/Components/Home.js",[],"/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/Components/Data.js",[],"/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/Components/Nav.js",[],"/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/Components/Histogram.js",["72","73","74","75","76","77"],"import React, { useState, useEffect} from 'react';\nimport '../App.css';\nimport { auth, database } from './../Firebase.js';\n\nimport {\n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n  } from 'recharts';\n\nfunction Histogram() {\n\n  const [data, setData] = useState([]);\n\n\n  const userInfo = auth.currentUser;\n  const uid = userInfo.uid;\n  var moodLog = [];\n  var webLog = [];\n  var moodLogAdj = [];\n  var webLogAdj = [];\n\n  const ms = () => {\n      var moodObj = {};\n      moodLog = [];\n  \n      const ref = database.ref('moods/'+uid+'/'+'1-26-2021');\n      ref.once('value', (snapshot) => {\n        snapshot.forEach((a) => {\n          const t = a.key;\n          const time = timeToInteger(t);\n          const m = a.val();\n          const mood1 = m[Object.keys(m)[0]];\n          const mood2 = m[Object.keys(m)[1]];\n          moodObj = {\n            'time' : time,\n            'mood1' : mood1,\n            'mood2' : mood2\n          }\n          moodLog.push(moodObj);\n        })\n      })\n      console.log(moodLog);\n      // const x = moodLog[0].time;\n      // console.log(x);\n    }\n\n    const ws = () => {\n      var webObj = {};\n      webLog = [];\n      const ref = database.ref('web/'+uid+'/'+'1-26-2021');\n      ref.on('value', (snapshot) => {\n        snapshot.forEach((a) => {\n          const domain = a.key;\n          const ref2 = database.ref('web/'+uid+'/'+'1-26-2021'+'/'+domain);\n          ref2.on('value', (snapshot2) => {\n            snapshot2.forEach((b) => {\n              const start = b.key;\n              const end = b.val();\n              webObj = {\n                'start' : start,\n                'end' : end,\n                'domain' : domain\n              }\n              webLog.push(webObj);\n            })\n          })\n        })\n      })\n      console.log(webLog);\n    }\n\n    // const ws = () => {\n    //   var webObj = {};\n    //   webLog = [];\n    //   const ref = database.ref('web/'+uid+'/'+'1-26-2021');\n    //   ref.once('value', (snapshot) => {\n    //     snapshot.forEach((website) => {\n    //       const domain = website.key;\n    //       const dataa = snapshot.val();\n    //       console.log(snapshot);\n    //       console.log(dataa);\n    //       console.log(dataa.entries());\n    //       dataa.forEach((startTimes) => {\n    //         const start = startTimes.key;\n    //         const end = startTimes.val();\n    //         webObj = {\n    //           'start' : start,\n    //           'end' : end,\n    //           'domain' : domain\n    //         }\n    //         webLog.push(webObj);\n    //       })\n    //     })\n    //   })\n    //   console.log(webLog);\n    // }\n\n    const moodTimeToInt = () => {\n      for (var i=0; i < moodLog.length; i++){\n        const time = timeToInteger(moodLog[i].time);\n        const mood1 = moodLog[i].mood1;\n        const mood2 = moodLog[i].mood2;\n        const mood = {\n          'time' : time,\n          'mood1' : mood1,\n          'mood2' : mood2\n        }\n        moodLogAdj.push(mood);\n      }\n      console.log(moodLogAdj);\n    }\n  \n    const webTimeToInt = () => {\n      for (var i=0; i < webLog.length; i++){\n        const start = timeToInteger(webLog[i].start);\n        const end = timeToInteger(webLog[i].end);\n        const domain = webLog[i].domain;\n        const web = {\n          'start' : start,\n          'end' : end,\n          'domain' : domain\n        }\n        webLogAdj.push(web);\n      }\n      console.log(webLogAdj);\n    }\n    \n    const timeToInteger = (time) => {\n      var t = time.split(':');\n      for (var i=0; i<t.length; i++){\n        t[i] = parseInt(t[i]);\n      }\n      const timeAsInt = ((t[0]*3600) + (t[1]*60) + t[2]);\n      return (timeAsInt);\n    }\n  \n    const moodGood = () => {\n      var timeByDomain = []\n      for (var i=0; i < moodLogAdj.length; i++){\n        if (moodLogAdj[i].mood2 === 'Focused'){\n          var time = moodLogAdj[i].time;\n          console.log(time);\n          //add conditional loop for if time < 3600\n          const x = hourBeforeArray(time);\n          console.log(x);\n          const distinctDomains = [...new Set(x.map(x => x.domain))];\n          console.log(distinctDomains);\n          for (var j=0; j < distinctDomains.length; j++){\n            var domTime = 0;\n            for (var k=0; k < x.length; k++){\n              if (x[k].domain === distinctDomains[j]){\n                var timeDiff = (x[k].end - x[k].start);\n                domTime += timeDiff;\n              }\n            }\n            const domainTime = {\n              'domain' : distinctDomains[j],\n              'time' : domTime\n            }\n            console.log(domainTime);\n            timeByDomain.push(domainTime);\n          }\n        }\n      }\n      console.log(timeByDomain);\n      var sorted = timeByDomain.sort(compare);\n      console.log(sorted);\n      const dataFocused = [\n          {\n            name: sorted[0].domain, minutes: sorted[0].time,\n          },\n          {\n            name: sorted[1].domain, minutes: sorted[1].time,\n          },\n          {\n            name: sorted[2].domain, minutes: sorted[2].time,\n          },\n          {\n            name: sorted[3].domain, minutes: sorted[3].time,\n          },\n          {\n            name: sorted[4].domain, minutes: sorted[4].time,\n          },\n      ];\n      setData([...dataFocused]);\n    }\n  \n    function compare (a, b){\n      const timeA = a.time;\n      const timeB = b.time;\n  \n      let comparison = 0;\n      if (timeA > timeB) {\n        comparison = -1;\n      }\n      else if (timeA < timeB){\n        comparison = 1;\n      }\n      return comparison;\n  \n    }\n  \n    const hourBeforeArray = (time) => {\n      var hba = [];\n      for (var i=0; i<webLogAdj.length; i++){\n        var start = webLogAdj[i].start;\n        //console.log(start);\n        if (start > (time-3600) && start < time){\n          console.log('found')\n          hba.push(webLogAdj[i]);\n          console.log(webLogAdj[i]);\n        }\n      }\n      return (hba);\n    }\n\n  // const data = [\n  //     {\n  //         name: 'www.createwithdata.com', seconds: '959'\n  //     },\n  //     {\n  //         name: 'canvas.com', seconds: '433'\n  //     },\n  //     {\n  //         name: 'localhost', seconds: '264'\n  //     },\n  //     {\n  //         name: 'stackoverflow.com', seconds: '86'\n  //     },\n  //     {\n  //         name: 'www.google.com', seconds: '59'\n  //     }\n  // ];\n\n  return(\n      <div>\n          <button onClick={ms}>\n              1\n          </button>\n          <button onClick={moodTimeToInt}>\n              2\n          </button>\n          <button onClick={ws}>\n              3\n          </button>\n          <button onClick={webTimeToInt}>\n              4\n          </button>\n          <button onClick={moodGood}>\n              chart!\n          </button>\n          <h2>\n              Mood: Focused\n          </h2>\n\n          \n\n          <BarChart width={500} height={500} data={data} margin={{top: 5, right: 30, left: 20, bottom: 5}}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis/>\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"seconds\" fill=\"#8884d8\" />\n          </BarChart>\n      </div>\n  )\n\n}\n\nexport default Histogram;",["78","79"],"/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/Components/BarGraph.js",["80","81","82","83"],"import React, { useState } from 'react';\nimport '../App.css';\nimport { auth, database } from './../Firebase.js';\n\nimport {\n    BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n  } from 'recharts';\n\n\nconst timeToInteger = (time) => {\n    var t = time.split(':');\n    for (var i=0; i<t.length; i++){\n      t[i] = parseInt(t[i]);\n    }\n    const timeAsInt = ((t[0]*3600) + (t[1]*60) + t[2]);\n    return (timeAsInt);\n}\n\nfunction BarGraph() {\n  const userInfo = auth.currentUser;\n  const uid = userInfo.uid;\n\n  const [mL, setML] = useState([]);\n  const [wL, setWL] = useState([]);\n  var moodLog = [];\n  var webLog = [];\n  // var moodLogAdj = [];\n  // var webLogAdj = [];\n  var moodObj = {};\n\n  function compare (a, b){\n      const timeA = a.time;\n      const timeB = b.time;\n  \n      let comparison = 0;\n      if (timeA > timeB) {\n        comparison = -1;\n      }\n      else if (timeA < timeB){\n        comparison = 1;\n      }\n      return comparison;\n    }\n  \n    const hourBeforeArray = (time) => {\n      var hba = [];\n      for (var i=0; i<wL.length; i++){\n        var start = wL[i].start;\n        //console.log(start);\n        if (start > (time-3600) && start < time){\n          console.log('found')\n          hba.push(wL[i]);\n          console.log(wL[i]);\n        }\n      }\n      return (hba);\n  }\n\n  // const ms\n  const ref1 = database.ref('moods/'+uid+'/'+'1-26-2021');\n  ref1.once('value', (snapshot) => {\n      snapshot.forEach((a) => {\n      const t = a.key;\n      const time = timeToInteger(t);\n      const m = a.val();\n      const mood1 = m[Object.keys(m)[0]];\n      const mood2 = m[Object.keys(m)[1]];\n      moodObj = {\n        'time' : time,\n        'mood1' : mood1,\n        'mood2' : mood2\n      }\n      moodLog.push(moodObj);\n    })\n  })\n  console.log(moodLog);\n  setML(moodLog);\n  console.log(mL);\n  // const x = moodLog[0].time;\n  // console.log(x);\n\n  //const moodTimeToInt\n\n  // for (var i=0; i < moodLog.length; i++){\n  //     const time = timeToInteger(moodLog[i].time);\n  //     const mood1 = moodLog[i].mood1;\n  //     const mood2 = moodLog[i].mood2;\n  //     const mood = {\n  //       'time' : time,\n  //       'mood1' : mood1,\n  //       'mood2' : mood2\n  //     }\n  //     moodLogAdj.push(mood);\n  //   }\n  // console.log(moodLogAdj);\n\n//const ws\n\n  var webObj = {};\n  webLog = [];\n\n  const ref2 = database.ref('web/'+uid+'/'+'1-26-2021');\n  ref2.on('value', async (snapshot) => {\n    snapshot.forEach((a) => {\n      const domain = a.key;\n      const ref3 = database.ref('web/'+uid+'/'+'1-26-2021'+'/'+domain);\n      ref3.on('value', async (snapshot2) => {\n        snapshot2.forEach((b) => {\n          const s = b.key;\n          const start = timeToInteger(s);\n          const e = b.val();\n          const end = timeToInteger(e);\n          webObj = {\n            'start' : start,\n            'end' : end,\n            'domain' : domain\n          }\n          webLog.push(webObj);\n        })\n      })\n    })\n  })\n\n  console.log(webLog);\n  setWL(webLog);\n  console.log(wL);\n\n//const webTimeToInt\n  \n  // for (var i=0; i < webLog.length; i++){\n  //     const start = timeToInteger(webLog[i].start);\n  //     const end = timeToInteger(webLog[i].end);\n  //     const domain = webLog[i].domain;\n  //     const web = {\n  //     'start' : start,\n  //     'end' : end,\n  //     'domain' : domain\n  //     }\n  //     webLogAdj.push(web);\n  // }\n  // console.log(webLogAdj);\n\n//const moodGood\n\n  var timeByDomain = []\n  for (var i=0; i < mL.length; i++){\n    if (mL[i].mood2 === 'Focused'){\n      var time = mL[i].time;\n      console.log(time);\n      //add conditional loop for if time < 3600\n      const x = hourBeforeArray(time);\n      console.log(x);\n      const distinctDomains = [...new Set(x.map(x => x.domain))];\n      console.log(distinctDomains);\n      for (var j=0; j < distinctDomains.length; j++){\n        var domTime = 0;\n        for (var k=0; k < x.length; k++){\n          if (x[k].domain === distinctDomains[j]){\n            var timeDiff = (x[k].end - x[k].start);\n            domTime += timeDiff;\n          }\n        }\n        const domainTime = {\n          'domain' : distinctDomains[j],\n          'time' : domTime\n        }\n        console.log(domainTime);\n        timeByDomain.push(domainTime);\n      }\n    }\n  }\n  console.log(timeByDomain);\n  var sorted = timeByDomain.sort(compare);\n  console.log(sorted);\n  // const data = [\n  //     {\n  //       name: sorted[0].domain, minutes: sorted[0].time,\n  //     },\n  //     {\n  //       name: sorted[1].domain, minutes: sorted[1].time,\n  //     },\n  //     {\n  //       name: sorted[2].domain, minutes: sorted[2].time,\n  //     },\n  //     {\n  //       name: sorted[3].domain, minutes: sorted[3].time,\n  //     },\n  //     {\n  //       name: sorted[4].domain, minutes: sorted[4].time,\n  //     },\n  // ];\n  const data = [\n      {\n          name: 'hello', minutes: '20'\n      }\n  ]\n\n\n  return(\n      <div>\n          <h2>Mood: Focused</h2>\n\n          <BarChart width={1000} height={500} data={data} margin={{top: 5, right: 30, left: 20, bottom: 5}}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis/>\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"seconds\" fill=\"#8884d8\" />\n          </BarChart>\n      </div>\n  )\n}\n\nexport default BarGraph;","/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/Components/MoodData.js",["84"],"/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/Components/WebData.js",["85","86","87","88","89"],"/Users/JosephMerkadeau/Documents/github/firebase-auth/auth-app/src/Components/GetDate.js",["90"],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":1,"column":27,"nodeType":"97","messageId":"98","endLine":1,"endColumn":36},{"ruleId":"95","severity":1,"message":"99","line":6,"column":20,"nodeType":"97","messageId":"98","endLine":6,"endColumn":24},{"ruleId":"100","severity":1,"message":"101","line":25,"column":48,"nodeType":"102","messageId":"103","endLine":25,"endColumn":49},{"ruleId":"100","severity":1,"message":"101","line":49,"column":46,"nodeType":"102","messageId":"103","endLine":49,"endColumn":47},{"ruleId":"100","severity":1,"message":"101","line":53,"column":51,"nodeType":"102","messageId":"103","endLine":53,"endColumn":52},{"ruleId":"100","severity":1,"message":"101","line":53,"column":63,"nodeType":"102","messageId":"103","endLine":53,"endColumn":64},{"ruleId":"91","replacedBy":"104"},{"ruleId":"93","replacedBy":"105"},{"ruleId":"100","severity":1,"message":"101","line":60,"column":45,"nodeType":"102","messageId":"103","endLine":60,"endColumn":46},{"ruleId":"100","severity":1,"message":"101","line":102,"column":43,"nodeType":"102","messageId":"103","endLine":102,"endColumn":44},{"ruleId":"100","severity":1,"message":"101","line":106,"column":47,"nodeType":"102","messageId":"103","endLine":106,"endColumn":48},{"ruleId":"100","severity":1,"message":"101","line":106,"column":59,"nodeType":"102","messageId":"103","endLine":106,"endColumn":60},{"ruleId":"95","severity":1,"message":"106","line":1,"column":8,"nodeType":"97","messageId":"98","endLine":1,"endColumn":13},{"ruleId":"95","severity":1,"message":"106","line":1,"column":8,"nodeType":"97","messageId":"98","endLine":1,"endColumn":13},{"ruleId":"95","severity":1,"message":"107","line":3,"column":10,"nodeType":"97","messageId":"98","endLine":3,"endColumn":14},{"ruleId":"95","severity":1,"message":"108","line":10,"column":5,"nodeType":"97","messageId":"98","endLine":10,"endColumn":11},{"ruleId":"95","severity":1,"message":"109","line":13,"column":7,"nodeType":"97","messageId":"98","endLine":13,"endColumn":20},{"ruleId":"95","severity":1,"message":"110","line":27,"column":15,"nodeType":"97","messageId":"98","endLine":27,"endColumn":19},{"ruleId":"95","severity":1,"message":"106","line":1,"column":8,"nodeType":"97","messageId":"98","endLine":1,"endColumn":13},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Cell' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["111"],["112"],"'React' is defined but never used.","'auth' is defined but never used.","'webObj' is assigned a value but never used.","'timeToInteger' is assigned a value but never used.","'ref2' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]