{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import'../App.css';import{auth,database}from'../Firebase.js';// import Histogram from './Histogram.js';\n// import BarGraph from './BarGraph.js';\nimport'./Data.css';//import { moodLog } from './MoodData.js';\nimport{webLog}from'./WebData.js';import{date}from'./GetDate.js';import{getAnxious}from'./WebsiteByMood.js';import WebByMoodGraph from'./WebByMoodGraph.js';import{BarChart,Bar,Cell,XAxis,YAxis,CartesianGrid,Tooltip,Legend}from'recharts';function Data(){//var a = await getAnxious();\nvar userInfo=auth.currentUser;var uid=userInfo.uid;// const today = new Date();\n// const month = today.getMonth() + 1;\n// const day = today.getDate();\n// const year = today.getFullYear();\n// const date = month+'-'+day+'-'+year;\nvar mL=[];var wL=[];var moods=function moods(){var moods=[];var moodTimes=[];mL=[];// moodObj = {\n//   mood1: '',\n//   mood2: '',\n//   time: ''\n// }\nvar ref=database.ref('moods/'+uid+'/'+date);ref.once('value',function(snapshot){snapshot.forEach(function(childSnapshot){var logTime=childSnapshot.key;moodTimes.push(logTime);var ref2=database.ref('moods/'+uid+'/'+date+'/'+logTime);ref2.once('value',function(snapshot){snapshot.forEach(function(childSnapshot){var mood=childSnapshot.val();moods.push(mood);mL.push(mood);mL.push(logTime);});});});});console.log(moodTimes);console.log(moods);console.log(mL);};var web=function web(){var domains=[];var startTimes=[];var endTimes=[];wL=[];// var i = 0;\nvar ref=database.ref('web/'+uid+'/'+date);ref.once('value',function(snapshot){snapshot.forEach(function(childSnapshot){var domain=childSnapshot.key;domains.push(domain);var ref2=database.ref('web/'+uid+'/'+date+'/'+domain);ref2.once('value',function(snapshot){snapshot.forEach(function(childSnapshot){var start=childSnapshot.key;var end=childSnapshot.val();startTimes.push(start);endTimes.push(end);wL.push(domain);wL.push(start);wL.push(end);});});});});console.log(domains);console.log(startTimes);console.log(endTimes);console.log(wL);};// const integerToTime = (int) => {\n//   var hour = Math.floor(int/3600);\n//   var r1 = (int % 3600);\n//   var min = Math.floor(r1/60);\n//   var sec = (r1 % 60);\n//   var timeAsInt = [hour, min, sec];\n//   for (var i=0; i<timeAsInt.length; i++){\n//     timeAsInt[i] = timeAsInt[i].toString();\n//   }\n//   var time = timeAsInt.join(':');\n//   console.log(time);\n// }\n// const good = () => {\n//   for (var i=0; i < moodLog.length; i++){\n//     if (moodLog[i] === \"Good\"){\n//       const timeLogged = moodLog[i+1];\n//       console.log(timeLogged);\n//     }\n//   }\n// }\n// const moodCounter = () => {\n//   for (var i=0; i < mL.length; i++){\n//     if (mL[i] === \"Awful\"){\n//       awfuls++;\n//     }\n//     else if (mL[i] === \"Bad\"){\n//       bads++;\n//     }\n//     else if (mL[i] === \"Fine\"){\n//       fines++;\n//     }\n//     else if (mL[i] === \"Good\"){\n//       goods++;\n//     }\n//     else if (mL[i] === \"Great\"){\n//       greats++;\n//     }\n//   }\n//   console.log(awfuls, bads, fines, goods, greats);\n// }\nvar showWeb=function showWeb(){console.log(webLog);};// const showMood = () => {\n//   console.log(moodLog);\n// }\n// const anxious = () => {\n//   console.log(timeByDom);\n// }\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"data\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Data goes here\"}),/*#__PURE__*/_jsx(\"button\",{onClick:moods,children:\"moods\"}),/*#__PURE__*/_jsx(\"button\",{onClick:web,children:\"web\"}),/*#__PURE__*/_jsx(\"button\",{onClick:showWeb,children:\"show web data\"}),/*#__PURE__*/_jsx(\"button\",{onClick:getAnxious,children:\"anxious\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(WebByMoodGraph,{})})]});}export default Data;","map":{"version":3,"sources":["/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/Components/Data.js"],"names":["React","auth","database","webLog","date","getAnxious","WebByMoodGraph","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Data","userInfo","currentUser","uid","mL","wL","moods","moodTimes","ref","once","snapshot","forEach","childSnapshot","logTime","key","push","ref2","mood","val","console","log","web","domains","startTimes","endTimes","domain","start","end","showWeb"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport { auth, database } from '../Firebase.js';\n// import Histogram from './Histogram.js';\n// import BarGraph from './BarGraph.js';\nimport './Data.css';\n//import { moodLog } from './MoodData.js';\nimport { webLog } from './WebData.js';\nimport { date } from './GetDate.js'\nimport { getAnxious } from './WebsiteByMood.js';\nimport WebByMoodGraph from './WebByMoodGraph.js';\n\nimport {\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\n\nfunction Data() {\n  //var a = await getAnxious();\n\n  const userInfo = auth.currentUser;\n  const uid = userInfo.uid;\n\n  // const today = new Date();\n  // const month = today.getMonth() + 1;\n  // const day = today.getDate();\n  // const year = today.getFullYear();\n  // const date = month+'-'+day+'-'+year;\n\n  var mL = [];\n  var wL = [];\n\n\n\n  const moods = () => {\n    var moods = [];\n    var moodTimes = []; \n    mL = [];\n\n    // moodObj = {\n    //   mood1: '',\n    //   mood2: '',\n    //   time: ''\n    // }\n    const ref = database.ref('moods/'+uid+'/'+date);\n    ref.once('value', (snapshot) => {\n      snapshot.forEach((childSnapshot) => {\n        var logTime = childSnapshot.key;\n        moodTimes.push(logTime);\n        const ref2 = database.ref('moods/'+uid+'/'+date+'/'+logTime);\n        ref2.once('value', (snapshot) => {\n          snapshot.forEach((childSnapshot) => {\n            var mood = childSnapshot.val();\n\n            moods.push(mood);\n            mL.push(mood);\n            mL.push(logTime);\n\n          })\n        })\n      })\n    })\n\n\n\n    console.log(moodTimes);\n    console.log(moods);\n    console.log(mL);\n  }\n\n  const web = () => {\n    var domains = [];\n    var startTimes = [];\n    var endTimes = [];\n    wL = [];\n    // var i = 0;\n\n\n    const ref = database.ref('web/'+uid+'/'+date);\n    ref.once('value', (snapshot) => {\n      snapshot.forEach((childSnapshot) => {\n        var domain = childSnapshot.key;\n        domains.push(domain);\n        const ref2 = database.ref('web/'+uid+'/'+date+'/'+domain);\n        ref2.once('value', (snapshot) => {\n          snapshot.forEach((childSnapshot) => {\n            var start = childSnapshot.key;\n            var end = childSnapshot.val();\n            startTimes.push(start);\n            endTimes.push(end);\n            wL.push(domain);\n            wL.push(start);\n            wL.push(end);\n          })\n        })\n      })\n    })\n\n    console.log(domains);\n    console.log(startTimes);\n    console.log(endTimes);\n    console.log(wL);\n\n  }\n\n  // const integerToTime = (int) => {\n  //   var hour = Math.floor(int/3600);\n  //   var r1 = (int % 3600);\n  //   var min = Math.floor(r1/60);\n  //   var sec = (r1 % 60);\n  //   var timeAsInt = [hour, min, sec];\n  //   for (var i=0; i<timeAsInt.length; i++){\n  //     timeAsInt[i] = timeAsInt[i].toString();\n  //   }\n  //   var time = timeAsInt.join(':');\n  //   console.log(time);\n  // }\n\n  // const good = () => {\n  //   for (var i=0; i < moodLog.length; i++){\n  //     if (moodLog[i] === \"Good\"){\n  //       const timeLogged = moodLog[i+1];\n  //       console.log(timeLogged);\n  //     }\n  //   }\n  // }\n\n\n  // const moodCounter = () => {\n  //   for (var i=0; i < mL.length; i++){\n  //     if (mL[i] === \"Awful\"){\n  //       awfuls++;\n  //     }\n  //     else if (mL[i] === \"Bad\"){\n  //       bads++;\n  //     }\n  //     else if (mL[i] === \"Fine\"){\n  //       fines++;\n  //     }\n  //     else if (mL[i] === \"Good\"){\n  //       goods++;\n  //     }\n  //     else if (mL[i] === \"Great\"){\n  //       greats++;\n  //     }\n  //   }\n  //   console.log(awfuls, bads, fines, goods, greats);\n  // }\n\n  const showWeb = () => {\n    console.log(webLog);\n  }\n\n  // const showMood = () => {\n  //   console.log(moodLog);\n  // }\n\n  // const anxious = () => {\n\n  //   console.log(timeByDom);\n  // }\n\n\n\n\n\n  return(\n    <div className='data'>\n        <h1>\n            Data goes here\n        </h1>\n        <button onClick={moods}>\n        moods\n        </button>\n        <button onClick={web}>\n        web\n        </button>\n        {/* <button onClick={showMood}>\n          show mood data\n        </button> */}\n        <button onClick={showWeb}>\n          show web data\n        </button>\n        <button onClick={getAnxious}>\n          anxious\n        </button>\n        <div>\n          <WebByMoodGraph/>\n        </div>\n        {/* <div>\n          <BarGraph/>\n        </div> */}\n    </div>\n  )\n}\n\nexport default Data;\n"]},"metadata":{},"sourceType":"module"}