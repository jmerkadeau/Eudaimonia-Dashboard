{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/Components/Data.js\";\nimport React from 'react';\nimport '../App.css';\nimport { auth, database } from '../Firebase.js'; // import Histogram from './Histogram.js';\n// import BarGraph from './BarGraph.js';\n\nimport './Data.css';\nimport { moodLog } from './MoodData.js';\nimport { webLog } from './WebData.js';\nimport { date } from './GetDate.js'; // import {\n//   BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n// } from 'recharts';\n\nfunction Data() {\n  const userInfo = auth.currentUser;\n  const uid = userInfo.uid; // const today = new Date();\n  // const month = today.getMonth() + 1;\n  // const day = today.getDate();\n  // const year = today.getFullYear();\n  // const date = month+'-'+day+'-'+year;\n\n  var mL = [];\n  var wL = [];\n\n  const moods = () => {\n    var moods = [];\n    var moodTimes = [];\n    mL = []; // moodObj = {\n    //   mood1: '',\n    //   mood2: '',\n    //   time: ''\n    // }\n\n    const ref = database.ref('moods/' + uid + '/' + date);\n    ref.once('value', snapshot => {\n      snapshot.forEach(childSnapshot => {\n        var logTime = childSnapshot.key;\n        moodTimes.push(logTime);\n        const ref2 = database.ref('moods/' + uid + '/' + date + '/' + logTime);\n        ref2.once('value', snapshot => {\n          snapshot.forEach(childSnapshot => {\n            var mood = childSnapshot.val();\n            moods.push(mood);\n            mL.push(mood);\n            mL.push(logTime);\n          });\n        });\n      });\n    });\n    console.log(moodTimes);\n    console.log(moods);\n    console.log(mL);\n  };\n\n  const web = () => {\n    var domains = [];\n    var startTimes = [];\n    var endTimes = [];\n    wL = []; // var i = 0;\n\n    const ref = database.ref('web/' + uid + '/' + date);\n    ref.once('value', snapshot => {\n      snapshot.forEach(childSnapshot => {\n        var domain = childSnapshot.key;\n        domains.push(domain);\n        const ref2 = database.ref('web/' + uid + '/' + date + '/' + domain);\n        ref2.once('value', snapshot => {\n          snapshot.forEach(childSnapshot => {\n            var start = childSnapshot.key;\n            var end = childSnapshot.val();\n            startTimes.push(start);\n            endTimes.push(end);\n            wL.push(domain);\n            wL.push(start);\n            wL.push(end);\n          });\n        });\n      });\n    });\n    console.log(domains);\n    console.log(startTimes);\n    console.log(endTimes);\n    console.log(wL);\n  }; // const integerToTime = (int) => {\n  //   var hour = Math.floor(int/3600);\n  //   var r1 = (int % 3600);\n  //   var min = Math.floor(r1/60);\n  //   var sec = (r1 % 60);\n  //   var timeAsInt = [hour, min, sec];\n  //   for (var i=0; i<timeAsInt.length; i++){\n  //     timeAsInt[i] = timeAsInt[i].toString();\n  //   }\n  //   var time = timeAsInt.join(':');\n  //   console.log(time);\n  // }\n  // const good = () => {\n  //   for (var i=0; i < moodLog.length; i++){\n  //     if (moodLog[i] === \"Good\"){\n  //       const timeLogged = moodLog[i+1];\n  //       console.log(timeLogged);\n  //     }\n  //   }\n  // }\n  // const moodCounter = () => {\n  //   for (var i=0; i < mL.length; i++){\n  //     if (mL[i] === \"Awful\"){\n  //       awfuls++;\n  //     }\n  //     else if (mL[i] === \"Bad\"){\n  //       bads++;\n  //     }\n  //     else if (mL[i] === \"Fine\"){\n  //       fines++;\n  //     }\n  //     else if (mL[i] === \"Good\"){\n  //       goods++;\n  //     }\n  //     else if (mL[i] === \"Great\"){\n  //       greats++;\n  //     }\n  //   }\n  //   console.log(awfuls, bads, fines, goods, greats);\n  // }\n\n\n  const showWeb = () => {\n    console.log(webLog);\n  };\n\n  const showMood = () => {\n    console.log(moodLog);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data goes here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: moods,\n      children: \"moods\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: web,\n      children: \"web\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: showMood,\n      children: \"show mood data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: showWeb,\n      children: \"show web data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Data;\nexport default Data;\n\nvar _c;\n\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"sources":["/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/Components/Data.js"],"names":["React","auth","database","moodLog","webLog","date","Data","userInfo","currentUser","uid","mL","wL","moods","moodTimes","ref","once","snapshot","forEach","childSnapshot","logTime","key","push","ref2","mood","val","console","log","web","domains","startTimes","endTimes","domain","start","end","showWeb","showMood"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport { auth, database } from '../Firebase.js';\n// import Histogram from './Histogram.js';\n// import BarGraph from './BarGraph.js';\nimport './Data.css';\nimport { moodLog } from './MoodData.js';\nimport { webLog } from './WebData.js';\nimport { date } from './GetDate.js'\n\n// import {\n//   BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n// } from 'recharts';\n\n\nfunction Data() {\n\n  const userInfo = auth.currentUser;\n  const uid = userInfo.uid;\n\n  // const today = new Date();\n  // const month = today.getMonth() + 1;\n  // const day = today.getDate();\n  // const year = today.getFullYear();\n  // const date = month+'-'+day+'-'+year;\n\n  var mL = [];\n  var wL = [];\n\n\n\n  const moods = () => {\n    var moods = [];\n    var moodTimes = []; \n    mL = [];\n\n    // moodObj = {\n    //   mood1: '',\n    //   mood2: '',\n    //   time: ''\n    // }\n    const ref = database.ref('moods/'+uid+'/'+date);\n    ref.once('value', (snapshot) => {\n      snapshot.forEach((childSnapshot) => {\n        var logTime = childSnapshot.key;\n        moodTimes.push(logTime);\n        const ref2 = database.ref('moods/'+uid+'/'+date+'/'+logTime);\n        ref2.once('value', (snapshot) => {\n          snapshot.forEach((childSnapshot) => {\n            var mood = childSnapshot.val();\n\n            moods.push(mood);\n            mL.push(mood);\n            mL.push(logTime);\n\n          })\n        })\n      })\n    })\n\n\n\n    console.log(moodTimes);\n    console.log(moods);\n    console.log(mL);\n  }\n\n  const web = () => {\n    var domains = [];\n    var startTimes = [];\n    var endTimes = [];\n    wL = [];\n    // var i = 0;\n\n\n    const ref = database.ref('web/'+uid+'/'+date);\n    ref.once('value', (snapshot) => {\n      snapshot.forEach((childSnapshot) => {\n        var domain = childSnapshot.key;\n        domains.push(domain);\n        const ref2 = database.ref('web/'+uid+'/'+date+'/'+domain);\n        ref2.once('value', (snapshot) => {\n          snapshot.forEach((childSnapshot) => {\n            var start = childSnapshot.key;\n            var end = childSnapshot.val();\n            startTimes.push(start);\n            endTimes.push(end);\n            wL.push(domain);\n            wL.push(start);\n            wL.push(end);\n          })\n        })\n      })\n    })\n\n    console.log(domains);\n    console.log(startTimes);\n    console.log(endTimes);\n    console.log(wL);\n\n  }\n\n  // const integerToTime = (int) => {\n  //   var hour = Math.floor(int/3600);\n  //   var r1 = (int % 3600);\n  //   var min = Math.floor(r1/60);\n  //   var sec = (r1 % 60);\n  //   var timeAsInt = [hour, min, sec];\n  //   for (var i=0; i<timeAsInt.length; i++){\n  //     timeAsInt[i] = timeAsInt[i].toString();\n  //   }\n  //   var time = timeAsInt.join(':');\n  //   console.log(time);\n  // }\n\n  // const good = () => {\n  //   for (var i=0; i < moodLog.length; i++){\n  //     if (moodLog[i] === \"Good\"){\n  //       const timeLogged = moodLog[i+1];\n  //       console.log(timeLogged);\n  //     }\n  //   }\n  // }\n\n\n  // const moodCounter = () => {\n  //   for (var i=0; i < mL.length; i++){\n  //     if (mL[i] === \"Awful\"){\n  //       awfuls++;\n  //     }\n  //     else if (mL[i] === \"Bad\"){\n  //       bads++;\n  //     }\n  //     else if (mL[i] === \"Fine\"){\n  //       fines++;\n  //     }\n  //     else if (mL[i] === \"Good\"){\n  //       goods++;\n  //     }\n  //     else if (mL[i] === \"Great\"){\n  //       greats++;\n  //     }\n  //   }\n  //   console.log(awfuls, bads, fines, goods, greats);\n  // }\n\n  const showWeb = () => {\n    console.log(webLog);\n  }\n\n  const showMood = () => {\n    console.log(moodLog);\n  }\n\n\n\n\n\n  return(\n    <div className='data'>\n        <h1>\n            Data goes here\n        </h1>\n        <button onClick={moods}>\n        moods\n        </button>\n        <button onClick={web}>\n        web\n        </button>\n        <button onClick={showMood}>\n          show mood data\n        </button>\n        <button onClick={showWeb}>\n          show web data\n        </button>\n        {/* <div>\n          <BarGraph/>\n        </div> */}\n    </div>\n  )\n}\n\nexport default Data;\n"]},"metadata":{},"sourceType":"module"}