{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/stanleyjia/Documents/Eudaimonia/Eudaimonia (dashboard)/app/src/Components/Profile/Profile.js\";\nimport React from 'react';\nimport { auth } from '../../Data/Firebase.js';\nimport { date } from '../../Data/GetDate.js';\n\nfunction Profile() {\n  // Collecting the user data from Google that we want to present on the profile page\n  const userInfo = auth.currentUser;\n  const name = userInfo.displayName;\n  const email = userInfo.email;\n  const uid = userInfo.uid;\n  const photo = userInfo.photoURL; // Just checks if the user is signed in\n  // Should always return user since the button is on a page\n  // that is only accessible when signed in\n\n  const checkUser = () => {\n    auth.onAuthStateChanged(function (user) {\n      if (user) {\n        console.log(user);\n      } else {\n        console.log(\"no user signed in\");\n      }\n    });\n  }; // Allows the user to sign out and sends\n  // them back to the landing page\n\n\n  const signOut = () => {\n    auth.signOut().then(() => {\n      console.log('sign out succesful');\n    }).catch(error => {\n      console.log(error);\n    });\n  }; // Just prints some user info\n\n\n  const hmm = () => {\n    console.log(name + \" \" + email + \" \" + uid);\n    console.log(date);\n  }; // Just displaying some user info on the page\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Profile Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userButtons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkUser,\n        children: \"check user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: signOut,\n        children: \"sign out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: hmm,\n        children: \"hmm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: photo,\n        id: \"profilePic\",\n        alt: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/stanleyjia/Documents/Eudaimonia/Eudaimonia (dashboard)/app/src/Components/Profile/Profile.js"],"names":["React","auth","date","Profile","userInfo","currentUser","name","displayName","email","uid","photo","photoURL","checkUser","onAuthStateChanged","user","console","log","signOut","then","catch","error","hmm"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,IAAT,QAAqB,uBAArB;;AAGA,SAASC,OAAT,GAAmB;AACjB;AACA,QAAMC,QAAQ,GAAGH,IAAI,CAACI,WAAtB;AACA,QAAMC,IAAI,GAAGF,QAAQ,CAACG,WAAtB;AACA,QAAMC,KAAK,GAAGJ,QAAQ,CAACI,KAAvB;AACA,QAAMC,GAAG,GAAGL,QAAQ,CAACK,GAArB;AACA,QAAMC,KAAK,GAAGN,QAAQ,CAACO,QAAvB,CANiB,CAQjB;AACA;AACA;;AACA,QAAMC,SAAS,GAAG,MAAM;AACtBX,IAAAA,IAAI,CAACY,kBAAL,CAAwB,UAAUC,IAAV,EAAgB;AACtC,UAAIA,IAAJ,EAAU;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,OAFD,MAGK;AACHC,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;AACF,KAPD;AAQD,GATD,CAXiB,CAsBjB;AACA;;;AACA,QAAMC,OAAO,GAAG,MAAM;AACpBhB,IAAAA,IAAI,CAACgB,OAAL,GAAeC,IAAf,CAAoB,MAAM;AACxBH,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,KAFD,EAEGG,KAFH,CAEUC,KAAD,IAAW;AAClBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,KAJD;AAKD,GAND,CAxBiB,CAgCjB;;;AACA,QAAMC,GAAG,GAAG,MAAM;AAChBN,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAI,GAAG,GAAP,GAAaE,KAAb,GAAqB,GAArB,GAA2BC,GAAvC;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACD,GAHD,CAjCiB,CAsCjB;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEU,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,OAAO,EAAEK,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAQ,QAAA,OAAO,EAAEI,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAeE;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEX,KAAV;AAAiB,QAAA,EAAE,EAAC,YAApB;AAAiC,QAAA,GAAG,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCACE;AAAA,oBACGJ;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,oBACGE;AADH;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;KApEQL,O;AAsET,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport { auth } from '../../Data/Firebase.js';\nimport { date } from '../../Data/GetDate.js';\n\n\nfunction Profile() {\n  // Collecting the user data from Google that we want to present on the profile page\n  const userInfo = auth.currentUser;\n  const name = userInfo.displayName;\n  const email = userInfo.email;\n  const uid = userInfo.uid;\n  const photo = userInfo.photoURL;\n\n  // Just checks if the user is signed in\n  // Should always return user since the button is on a page\n  // that is only accessible when signed in\n  const checkUser = () => {\n    auth.onAuthStateChanged(function (user) {\n      if (user) {\n        console.log(user)\n      }\n      else {\n        console.log(\"no user signed in\")\n      }\n    });\n  }\n\n  // Allows the user to sign out and sends\n  // them back to the landing page\n  const signOut = () => {\n    auth.signOut().then(() => {\n      console.log('sign out succesful')\n    }).catch((error) => {\n      console.log(error);\n    });\n  }\n\n  // Just prints some user info\n  const hmm = () => {\n    console.log(name + \" \" + email + \" \" + uid);\n    console.log(date);\n  }\n\n  // Just displaying some user info on the page\n  return (\n    <div className=\"profile\">\n      <h1>\n        Profile Page\n      </h1>\n      <div className='userButtons'>\n        <button onClick={checkUser} >\n          check user\n        </button>\n        <button onClick={signOut} >\n          sign out\n        </button>\n        <button onClick={hmm} >\n          hmm\n        </button>\n      </div>\n      <div>\n        <img src={photo} id='profilePic' alt='Profile' />\n        <span>\n          <h3>\n            {name}\n          </h3>\n          <h4>\n            {email}\n          </h4>\n        </span>\n      </div>\n    </div>\n  )\n}\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}