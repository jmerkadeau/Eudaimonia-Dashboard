{"ast":null,"code":"import React from 'react';\nimport { auth, database } from './Firebase.js';\nimport { date } from './GetDate.js';\n\nasync function getMoodLog() {\n  const uid = auth.currentUser.uid;\n  var moods = [];\n  var moodObj = {};\n\n  const timeToInteger = time => {\n    var t = time.split(':');\n\n    for (var i = 0; i < t.length; i++) {\n      t[i] = parseInt(t[i]);\n    }\n\n    const timeAsInt = t[0] * 3600 + t[1] * 60 + t[2];\n    return timeAsInt;\n  };\n\n  const ref = database.ref('moods/' + uid + '/' + date);\n  await ref.once('value', snapshot => {\n    snapshot.forEach(a => {\n      const t = a.key;\n      const time = timeToInteger(t);\n      const m = a.val();\n      const mood = m[Object.keys(m)[0]];\n      moodObj = {\n        'time': time,\n        'mood': mood\n      };\n      moods.push(moodObj);\n    });\n  });\n  return moods;\n}\n\nexport default getMoodLog;","map":{"version":3,"sources":["/Users/stanleyjia/Documents/Eudaimonia/Eudaimonia (dashboard)/app/src/Data/MoodData.js"],"names":["React","auth","database","date","getMoodLog","uid","currentUser","moods","moodObj","timeToInteger","time","t","split","i","length","parseInt","timeAsInt","ref","once","snapshot","forEach","a","key","m","val","mood","Object","keys","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,eAA/B;AACA,SAASC,IAAT,QAAqB,cAArB;;AAEA,eAAeC,UAAf,GAA4B;AAC1B,QAAMC,GAAG,GAAGJ,IAAI,CAACK,WAAL,CAAiBD,GAA7B;AACA,MAAIE,KAAK,GAAG,EAAZ;AACA,MAAIC,OAAO,GAAG,EAAd;;AAEA,QAAMC,aAAa,GAAIC,IAAD,IAAU;AAC9B,QAAIC,CAAC,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAR;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAAC,CAACG,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;AACjCF,MAAAA,CAAC,CAACE,CAAD,CAAD,GAAOE,QAAQ,CAACJ,CAAC,CAACE,CAAD,CAAF,CAAf;AACD;;AACD,UAAMG,SAAS,GAAKL,CAAC,CAAC,CAAD,CAAD,GAAO,IAAR,GAAiBA,CAAC,CAAC,CAAD,CAAD,GAAO,EAAxB,GAA8BA,CAAC,CAAC,CAAD,CAAlD;AACA,WAAQK,SAAR;AACD,GAPD;;AASE,QAAMC,GAAG,GAAGf,QAAQ,CAACe,GAAT,CAAa,WAASZ,GAAT,GAAa,GAAb,GAAiBF,IAA9B,CAAZ;AACA,QAAMc,GAAG,CAACC,IAAJ,CAAS,OAAT,EAAmBC,QAAD,IAAc;AAClCA,IAAAA,QAAQ,CAACC,OAAT,CAAkBC,CAAD,IAAO;AACpB,YAAMV,CAAC,GAAGU,CAAC,CAACC,GAAZ;AACA,YAAMZ,IAAI,GAAGD,aAAa,CAACE,CAAD,CAA1B;AACA,YAAMY,CAAC,GAAGF,CAAC,CAACG,GAAF,EAAV;AACA,YAAMC,IAAI,GAAGF,CAAC,CAACG,MAAM,CAACC,IAAP,CAAYJ,CAAZ,EAAe,CAAf,CAAD,CAAd;AAEAf,MAAAA,OAAO,GAAG;AACN,gBAASE,IADH;AAEN,gBAASe;AAFH,OAAV;AAIAlB,MAAAA,KAAK,CAACqB,IAAN,CAAWpB,OAAX;AACH,KAXD;AAYH,GAbK,CAAN;AAcA,SAAOD,KAAP;AACH;;AACD,eAAeH,UAAf","sourcesContent":["import React from 'react';\nimport { auth, database } from './Firebase.js';\nimport { date } from './GetDate.js';\n\nasync function getMoodLog() {\n  const uid = auth.currentUser.uid;\n  var moods = [];\n  var moodObj = {};\n\n  const timeToInteger = (time) => {\n    var t = time.split(':');\n    for (var i = 0; i < t.length; i++) {\n      t[i] = parseInt(t[i]);\n    }\n    const timeAsInt = ((t[0] * 3600) + (t[1] * 60) + t[2]);\n    return (timeAsInt);\n  }\n\n    const ref = database.ref('moods/'+uid+'/'+date);\n    await ref.once('value', (snapshot) => {\n        snapshot.forEach((a) => {\n            const t = a.key;\n            const time = timeToInteger(t);\n            const m = a.val();\n            const mood = m[Object.keys(m)[0]];\n\n            moodObj = {\n                'time' : time,\n                'mood' : mood\n            }\n            moods.push(moodObj);\n        })\n    })\n    return(moods);\n}\nexport default getMoodLog;\n"]},"metadata":{},"sourceType":"module"}