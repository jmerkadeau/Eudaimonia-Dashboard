{"ast":null,"code":"import _regeneratorRuntime from\"/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{Component}from'react';import getMoodLog from'./MoodData.js';import{webLog}from'./WebData.js';var hourBeforeArray=function hourBeforeArray(time){var hba=[];for(var i=0;i<webLog.length;i++){var start=webLog[i].start;var end=webLog[i].end;//console.log(start);\nif(start>time-3600&&start<time){var timeDiff=end-start;var a={'domain':webLog[i].domain,'timeDiff':timeDiff};hba.push(a);}}return hba;};function compare(a,b){var timeA=a.time;var timeB=b.time;var comparison=0;if(timeA>timeB){comparison=-1;}else if(timeA<timeB){comparison=1;}return comparison;}var getAnxious=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var timeByDomain,moodLog,i,time,x,distinctDomains,j,domTime,k,domainTime,topFive,anxiousData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:timeByDomain=[];_context.next=3;return getMoodLog();case 3:moodLog=_context.sent;for(i=0;i<moodLog.length;i++){if(moodLog[i].mood==='Anxious'){time=moodLog[i].time;// add conditional loop for if time < 3600\n// x is the array of the web times for the hour leading up to the mood log\nx=hourBeforeArray(time);distinctDomains=_toConsumableArray(new Set(x.map(function(x){return x.domain;})));for(j=0;j<distinctDomains.length;j++){domTime=0;for(k=0;k<x.length;k++){if(x[k].domain===distinctDomains[j]){domTime+=x[k].timeDiff;}}domainTime={'domain':distinctDomains[j],'time':domTime};timeByDomain.push(domainTime);}}}topFive=timeByDomain.sort(compare);console.log(topFive);anxiousData=[{name:topFive[0].domain,seconds:topFive[0].time},{name:topFive[1].domain,seconds:topFive[1].time},{name:topFive[2].domain,seconds:topFive[2].time},{name:topFive[3].domain,seconds:topFive[3].time},{name:topFive[4].domain,seconds:topFive[4].time}];console.log(anxiousData);return _context.abrupt(\"return\",anxiousData);case 10:case\"end\":return _context.stop();}}},_callee);}));return function getAnxious(){return _ref.apply(this,arguments);};}();var getConfident=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var timeByDomain,moodLog,i,time,x,distinctDomains,j,domTime,k,domainTime,topFive,confidentData;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:timeByDomain=[];_context2.next=3;return getMoodLog();case 3:moodLog=_context2.sent;for(i=0;i<moodLog.length;i++){if(moodLog[i].mood==='Confident'){time=moodLog[i].time;// add conditional loop for if time < 3600\n// x is the array of the web times for the hour leading up to the mood log\nx=hourBeforeArray(time);distinctDomains=_toConsumableArray(new Set(x.map(function(x){return x.domain;})));for(j=0;j<distinctDomains.length;j++){domTime=0;for(k=0;k<x.length;k++){if(x[k].domain===distinctDomains[j]){domTime+=x[k].timeDiff;}}domainTime={'domain':distinctDomains[j],'time':domTime};timeByDomain.push(domainTime);}}}topFive=timeByDomain.sort(compare);console.log(topFive);confidentData=[{name:topFive[0].domain,seconds:topFive[0].time},{name:topFive[1].domain,seconds:topFive[1].time},{name:topFive[2].domain,seconds:topFive[2].time},{name:topFive[3].domain,seconds:topFive[3].time},{name:topFive[4].domain,seconds:topFive[4].time}];console.log(confidentData);return _context2.abrupt(\"return\",confidentData);case 10:case\"end\":return _context2.stop();}}},_callee2);}));return function getConfident(){return _ref2.apply(this,arguments);};}();var getSad=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var timeByDomain,moodLog,i,time,x,distinctDomains,j,domTime,k,domainTime,topFive,sadData;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:timeByDomain=[];_context3.next=3;return getMoodLog();case 3:moodLog=_context3.sent;for(i=0;i<moodLog.length;i++){if(moodLog[i].mood==='Sad'){time=moodLog[i].time;// add conditional loop for if time < 3600\n// x is the array of the web times for the hour leading up to the mood log\nx=hourBeforeArray(time);distinctDomains=_toConsumableArray(new Set(x.map(function(x){return x.domain;})));for(j=0;j<distinctDomains.length;j++){domTime=0;for(k=0;k<x.length;k++){if(x[k].domain===distinctDomains[j]){domTime+=x[k].timeDiff;}}domainTime={'domain':distinctDomains[j],'time':domTime};timeByDomain.push(domainTime);}}}topFive=timeByDomain.sort(compare);console.log(topFive);sadData=[{name:topFive[0].domain,seconds:topFive[0].time},{name:topFive[1].domain,seconds:topFive[1].time},{name:topFive[2].domain,seconds:topFive[2].time},{name:topFive[3].domain,seconds:topFive[3].time},{name:topFive[4].domain,seconds:topFive[4].time}];console.log(sadData);return _context3.abrupt(\"return\",sadData);case 10:case\"end\":return _context3.stop();}}},_callee3);}));return function getSad(){return _ref3.apply(this,arguments);};}();var getHappy=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var timeByDomain,moodLog,i,time,x,distinctDomains,j,domTime,k,domainTime,topFive,happyData;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:timeByDomain=[];_context4.next=3;return getMoodLog();case 3:moodLog=_context4.sent;for(i=0;i<moodLog.length;i++){if(moodLog[i].mood==='Happy'){time=moodLog[i].time;// add conditional loop for if time < 3600\n// x is the array of the web times for the hour leading up to the mood log\nx=hourBeforeArray(time);distinctDomains=_toConsumableArray(new Set(x.map(function(x){return x.domain;})));for(j=0;j<distinctDomains.length;j++){domTime=0;for(k=0;k<x.length;k++){if(x[k].domain===distinctDomains[j]){domTime+=x[k].timeDiff;}}domainTime={'domain':distinctDomains[j],'time':domTime};timeByDomain.push(domainTime);}}}topFive=timeByDomain.sort(compare);console.log(topFive);happyData=[{name:topFive[0].domain,seconds:topFive[0].time},{name:topFive[1].domain,seconds:topFive[1].time},{name:topFive[2].domain,seconds:topFive[2].time},{name:topFive[3].domain,seconds:topFive[3].time},{name:topFive[4].domain,seconds:topFive[4].time}];console.log(happyData);return _context4.abrupt(\"return\",happyData);case 10:case\"end\":return _context4.stop();}}},_callee4);}));return function getHappy(){return _ref4.apply(this,arguments);};}();// function anxiousRetrieved(moodLog) {\n//   // var timeByDomain = [];\n//   // console.log(typeof (moodLog));\n//   // console.log(`here ${moodLog}`);\n//   // console.log(moodLog.keys());\n//   console.log(moodLog);\n//   // console.log(Object.entries(moodLog));\n//   for (var key in moodLog) {\n//     console.log(moodLog[key]);\n//     //     console.log(moodLog[key]);\n//     //     if (moodLog[key].mood === 'Anxious'){\n//     //         var time = moodLog[key].time;\n//     //         // add conditional loop for if time < 3600\n//     //         // x is the array of the web times for the hour leading up to the mood log\n//     //         const x  = hourBeforeArray(time)\n//     //         console.log(x);\n//     //         const distinctDomains = [...new Set(x.map(x => x.domain))];\n//     //         console.log(distinctDomains);\n//     //         for (var j = 0; j < distinctDomains.length; j++){\n//     //             var domTime = 0;\n//     //             for (var k = 0; k < x.length; k++){\n//     //                 if (x[k].domain === distinctDomains[j]){\n//     //                     console.log('works!!!')\n//     //                     domTime += x[k].timeDiff;\n//     //                 }\n//     //             }\n//     //             const domainTime = {\n//     //                 'domain' : distinctDomains[j],\n//     //                 'time' : domTime\n//     //             }\n//     //             timeByDomain.push(domainTime);\n//     //         }\n//     //     }\n//     // }\n//     // const topFive = timeByDomain.sort(compare);\n//     // console.log(timeByDomain);\n//     // const anxiousData = [\n//     //     {name: topFive[0].domain, seconds: topFive[0].time},\n//     //     {name: topFive[1].domain, seconds: topFive[1].time},\n//     //     {name: topFive[2].domain, seconds: topFive[2].time},\n//     //     {name: topFive[3].domain, seconds: topFive[3].time},\n//     //     {name: topFive[4].domain, seconds: topFive[4].time},\n//     // ]\n//     //return(anxiousData);\n//   }\n//   return ([]);\n// }\n//ending here\n// const anxiousData = [\n//     {name: timeByDomain[0].domain, seconds: timeByDomain[0].time},\n//     {name: timeByDomain[1].domain, seconds: timeByDomain[1].time},\n//     {name: timeByDomain[2].domain, seconds: timeByDomain[2].time},\n//     {name: timeByDomain[3].domain, seconds: timeByDomain[3].time},\n//     {name: timeByDomain[4].domain, seconds: timeByDomain[4].time},\n// ]\n// };\n//export default tim;\n// // console.log(timeByDomain);\nexport{getAnxious,getConfident,getSad,getHappy};// export const timeByDom = getAnxious();","map":{"version":3,"sources":["/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/Components/WebsiteByMood.js"],"names":["React","Component","getMoodLog","webLog","hourBeforeArray","time","hba","i","length","start","end","timeDiff","a","domain","push","compare","b","timeA","timeB","comparison","getAnxious","timeByDomain","moodLog","mood","x","distinctDomains","Set","map","j","domTime","k","domainTime","topFive","sort","console","log","anxiousData","name","seconds","getConfident","confidentData","getSad","sadData","getHappy","happyData"],"mappings":"qbAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CACA,OAASC,MAAT,KAAuB,cAAvB,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,IAAD,CAAU,CAChC,GAAIC,CAAAA,GAAG,CAAG,EAAV,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGJ,MAAM,CAACK,MAA3B,CAAmCD,CAAC,EAApC,CAAwC,CACtC,GAAIE,CAAAA,KAAK,CAAGN,MAAM,CAACI,CAAD,CAAN,CAAUE,KAAtB,CACA,GAAIC,CAAAA,GAAG,CAAGP,MAAM,CAACI,CAAD,CAAN,CAAUG,GAApB,CACA;AACA,GAAID,KAAK,CAAIJ,IAAI,CAAG,IAAhB,EAAyBI,KAAK,CAAGJ,IAArC,CAA2C,CACzC,GAAIM,CAAAA,QAAQ,CAAGD,GAAG,CAAGD,KAArB,CACA,GAAMG,CAAAA,CAAC,CAAG,CACR,SAAUT,MAAM,CAACI,CAAD,CAAN,CAAUM,MADZ,CAER,WAAYF,QAFJ,CAAV,CAIAL,GAAG,CAACQ,IAAJ,CAASF,CAAT,EACD,CACF,CACD,MAAQN,CAAAA,GAAR,CACD,CAhBD,CAiBA,QAASS,CAAAA,OAAT,CAAiBH,CAAjB,CAAoBI,CAApB,CAAuB,CACrB,GAAMC,CAAAA,KAAK,CAAGL,CAAC,CAACP,IAAhB,CACA,GAAMa,CAAAA,KAAK,CAAGF,CAAC,CAACX,IAAhB,CAEA,GAAIc,CAAAA,UAAU,CAAG,CAAjB,CACA,GAAIF,KAAK,CAAGC,KAAZ,CAAmB,CACjBC,UAAU,CAAG,CAAC,CAAd,CACD,CAFD,IAGK,IAAIF,KAAK,CAAGC,KAAZ,CAAmB,CACtBC,UAAU,CAAG,CAAb,CACD,CACD,MAAOA,CAAAA,UAAP,CACD,CAED,GAAIC,CAAAA,UAAU,0FAAG,gOACTC,YADS,CACM,EADN,uBAESnB,CAAAA,UAAU,EAFnB,QAEPoB,OAFO,eAGb,IAASf,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGe,OAAO,CAACd,MAA5B,CAAoCD,CAAC,EAArC,CAAwC,CACpC,GAAIe,OAAO,CAACf,CAAD,CAAP,CAAWgB,IAAX,GAAoB,SAAxB,CAAkC,CAC1BlB,IAD0B,CACnBiB,OAAO,CAACf,CAAD,CAAP,CAAWF,IADQ,CAE9B;AACA;AACMmB,CAJwB,CAInBpB,eAAe,CAACC,IAAD,CAJI,CAKxBoB,eALwB,oBAKF,GAAIC,CAAAA,GAAJ,CAAQF,CAAC,CAACG,GAAF,CAAM,SAAAH,CAAC,QAAIA,CAAAA,CAAC,CAACX,MAAN,EAAP,CAAR,CALE,EAM9B,IAASe,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGH,eAAe,CAACjB,MAApC,CAA4CoB,CAAC,EAA7C,CAAgD,CACxCC,OADwC,CAC9B,CAD8B,CAE5C,IAASC,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGN,CAAC,CAAChB,MAAtB,CAA8BsB,CAAC,EAA/B,CAAkC,CAC9B,GAAIN,CAAC,CAACM,CAAD,CAAD,CAAKjB,MAAL,GAAgBY,eAAe,CAACG,CAAD,CAAnC,CAAuC,CACnCC,OAAO,EAAIL,CAAC,CAACM,CAAD,CAAD,CAAKnB,QAAhB,CACH,CACJ,CACKoB,UAPsC,CAOzB,CACf,SAAWN,eAAe,CAACG,CAAD,CADX,CAEf,OAASC,OAFM,CAPyB,CAW5CR,YAAY,CAACP,IAAb,CAAkBiB,UAAlB,EACH,CACJ,CACJ,CACKC,OAzBO,CAyBGX,YAAY,CAACY,IAAb,CAAkBlB,OAAlB,CAzBH,CA0BbmB,OAAO,CAACC,GAAR,CAAYH,OAAZ,EACMI,WA3BO,CA2BO,CAChB,CAACC,IAAI,CAAEL,OAAO,CAAC,CAAD,CAAP,CAAWnB,MAAlB,CAA0ByB,OAAO,CAAEN,OAAO,CAAC,CAAD,CAAP,CAAW3B,IAA9C,CADgB,CAEhB,CAACgC,IAAI,CAAEL,OAAO,CAAC,CAAD,CAAP,CAAWnB,MAAlB,CAA0ByB,OAAO,CAAEN,OAAO,CAAC,CAAD,CAAP,CAAW3B,IAA9C,CAFgB,CAGhB,CAACgC,IAAI,CAAEL,OAAO,CAAC,CAAD,CAAP,CAAWnB,MAAlB,CAA0ByB,OAAO,CAAEN,OAAO,CAAC,CAAD,CAAP,CAAW3B,IAA9C,CAHgB,CAIhB,CAACgC,IAAI,CAAEL,OAAO,CAAC,CAAD,CAAP,CAAWnB,MAAlB,CAA0ByB,OAAO,CAAEN,OAAO,CAAC,CAAD,CAAP,CAAW3B,IAA9C,CAJgB,CAKhB,CAACgC,IAAI,CAAEL,OAAO,CAAC,CAAD,CAAP,CAAWnB,MAAlB,CAA0ByB,OAAO,CAAEN,OAAO,CAAC,CAAD,CAAP,CAAW3B,IAA9C,CALgB,CA3BP,CAkCb6B,OAAO,CAACC,GAAR,CAAYC,WAAZ,EAlCa,gCAmCNA,WAnCM,yDAAH,kBAAVhB,CAAAA,UAAU,0CAAd,CAqCA,GAAImB,CAAAA,YAAY,2FAAG,uOACXlB,YADW,CACI,EADJ,wBAEOnB,CAAAA,UAAU,EAFjB,QAEToB,OAFS,gBAGf,IAASf,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGe,OAAO,CAACd,MAA5B,CAAoCD,CAAC,EAArC,CAAwC,CACpC,GAAIe,OAAO,CAACf,CAAD,CAAP,CAAWgB,IAAX,GAAoB,WAAxB,CAAoC,CAC5BlB,IAD4B,CACrBiB,OAAO,CAACf,CAAD,CAAP,CAAWF,IADU,CAEhC;AACA;AACMmB,CAJ0B,CAIrBpB,eAAe,CAACC,IAAD,CAJM,CAK1BoB,eAL0B,oBAKJ,GAAIC,CAAAA,GAAJ,CAAQF,CAAC,CAACG,GAAF,CAAM,SAAAH,CAAC,QAAIA,CAAAA,CAAC,CAACX,MAAN,EAAP,CAAR,CALI,EAMhC,IAASe,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGH,eAAe,CAACjB,MAApC,CAA4CoB,CAAC,EAA7C,CAAgD,CACxCC,OADwC,CAC9B,CAD8B,CAE5C,IAASC,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGN,CAAC,CAAChB,MAAtB,CAA8BsB,CAAC,EAA/B,CAAkC,CAC9B,GAAIN,CAAC,CAACM,CAAD,CAAD,CAAKjB,MAAL,GAAgBY,eAAe,CAACG,CAAD,CAAnC,CAAuC,CACnCC,OAAO,EAAIL,CAAC,CAACM,CAAD,CAAD,CAAKnB,QAAhB,CACH,CACJ,CACKoB,UAPsC,CAOzB,CACf,SAAWN,eAAe,CAACG,CAAD,CADX,CAEf,OAASC,OAFM,CAPyB,CAW5CR,YAAY,CAACP,IAAb,CAAkBiB,UAAlB,EACH,CACJ,CACJ,CACKC,OAzBS,CAyBCX,YAAY,CAACY,IAAb,CAAkBlB,OAAlB,CAzBD,CA0BfmB,OAAO,CAACC,GAAR,CAAYH,OAAZ,EACMQ,aA3BS,CA2BO,CAClB,CAACH,IAAI,CAAEL,OAAO,CAAC,CAAD,CAAP,CAAWnB,MAAlB,CAA0ByB,OAAO,CAAEN,OAAO,CAAC,CAAD,CAAP,CAAW3B,IAA9C,CADkB,CAElB,CAACgC,IAAI,CAAEL,OAAO,CAAC,CAAD,CAAP,CAAWnB,MAAlB,CAA0ByB,OAAO,CAAEN,OAAO,CAAC,CAAD,CAAP,CAAW3B,IAA9C,CAFkB,CAGlB,CAACgC,IAAI,CAAEL,OAAO,CAAC,CAAD,CAAP,CAAWnB,MAAlB,CAA0ByB,OAAO,CAAEN,OAAO,CAAC,CAAD,CAAP,CAAW3B,IAA9C,CAHkB,CAIlB,CAACgC,IAAI,CAAEL,OAAO,CAAC,CAAD,CAAP,CAAWnB,MAAlB,CAA0ByB,OAAO,CAAEN,OAAO,CAAC,CAAD,CAAP,CAAW3B,IAA9C,CAJkB,CAKlB,CAACgC,IAAI,CAAEL,OAAO,CAAC,CAAD,CAAP,CAAWnB,MAAlB,CAA0ByB,OAAO,CAAEN,OAAO,CAAC,CAAD,CAAP,CAAW3B,IAA9C,CALkB,CA3BP,CAkCf6B,OAAO,CAACC,GAAR,CAAYK,aAAZ,EAlCe,iCAmCRA,aAnCQ,2DAAH,kBAAZD,CAAAA,YAAY,2CAAhB,CAqCA,GAAIE,CAAAA,MAAM,2FAAG,iOACLpB,YADK,CACU,EADV,wBAEanB,CAAAA,UAAU,EAFvB,QAEHoB,OAFG,gBAGT,IAASf,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGe,OAAO,CAACd,MAA5B,CAAoCD,CAAC,EAArC,CAAwC,CACpC,GAAIe,OAAO,CAACf,CAAD,CAAP,CAAWgB,IAAX,GAAoB,KAAxB,CAA8B,CACtBlB,IADsB,CACfiB,OAAO,CAACf,CAAD,CAAP,CAAWF,IADI,CAE1B;AACA;AACMmB,CAJoB,CAIfpB,eAAe,CAACC,IAAD,CAJA,CAKpBoB,eALoB,oBAKE,GAAIC,CAAAA,GAAJ,CAAQF,CAAC,CAACG,GAAF,CAAM,SAAAH,CAAC,QAAIA,CAAAA,CAAC,CAACX,MAAN,EAAP,CAAR,CALF,EAM1B,IAASe,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGH,eAAe,CAACjB,MAApC,CAA4CoB,CAAC,EAA7C,CAAgD,CACxCC,OADwC,CAC9B,CAD8B,CAE5C,IAASC,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGN,CAAC,CAAChB,MAAtB,CAA8BsB,CAAC,EAA/B,CAAkC,CAC9B,GAAIN,CAAC,CAACM,CAAD,CAAD,CAAKjB,MAAL,GAAgBY,eAAe,CAACG,CAAD,CAAnC,CAAuC,CACnCC,OAAO,EAAIL,CAAC,CAACM,CAAD,CAAD,CAAKnB,QAAhB,CACH,CACJ,CACKoB,UAPsC,CAOzB,CACf,SAAWN,eAAe,CAACG,CAAD,CADX,CAEf,OAASC,OAFM,CAPyB,CAW5CR,YAAY,CAACP,IAAb,CAAkBiB,UAAlB,EACH,CACJ,CACJ,CACKC,OAzBG,CAyBOX,YAAY,CAACY,IAAb,CAAkBlB,OAAlB,CAzBP,CA0BTmB,OAAO,CAACC,GAAR,CAAYH,OAAZ,EACMU,OA3BG,CA2BO,CACZ,CAACL,IAAI,CAAEL,OAAO,CAAC,CAAD,CAAP,CAAWnB,MAAlB,CAA0ByB,OAAO,CAAEN,OAAO,CAAC,CAAD,CAAP,CAAW3B,IAA9C,CADY,CAEZ,CAACgC,IAAI,CAAEL,OAAO,CAAC,CAAD,CAAP,CAAWnB,MAAlB,CAA0ByB,OAAO,CAAEN,OAAO,CAAC,CAAD,CAAP,CAAW3B,IAA9C,CAFY,CAGZ,CAACgC,IAAI,CAAEL,OAAO,CAAC,CAAD,CAAP,CAAWnB,MAAlB,CAA0ByB,OAAO,CAAEN,OAAO,CAAC,CAAD,CAAP,CAAW3B,IAA9C,CAHY,CAIZ,CAACgC,IAAI,CAAEL,OAAO,CAAC,CAAD,CAAP,CAAWnB,MAAlB,CAA0ByB,OAAO,CAAEN,OAAO,CAAC,CAAD,CAAP,CAAW3B,IAA9C,CAJY,CAKZ,CAACgC,IAAI,CAAEL,OAAO,CAAC,CAAD,CAAP,CAAWnB,MAAlB,CAA0ByB,OAAO,CAAEN,OAAO,CAAC,CAAD,CAAP,CAAW3B,IAA9C,CALY,CA3BP,CAkCT6B,OAAO,CAACC,GAAR,CAAYO,OAAZ,EAlCS,iCAmCFA,OAnCE,2DAAH,kBAAND,CAAAA,MAAM,2CAAV,CAqCA,GAAIE,CAAAA,QAAQ,2FAAG,mOACPtB,YADO,CACQ,EADR,wBAEWnB,CAAAA,UAAU,EAFrB,QAELoB,OAFK,gBAGX,IAASf,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGe,OAAO,CAACd,MAA5B,CAAoCD,CAAC,EAArC,CAAwC,CACpC,GAAIe,OAAO,CAACf,CAAD,CAAP,CAAWgB,IAAX,GAAoB,OAAxB,CAAgC,CACxBlB,IADwB,CACjBiB,OAAO,CAACf,CAAD,CAAP,CAAWF,IADM,CAE5B;AACA;AACMmB,CAJsB,CAIjBpB,eAAe,CAACC,IAAD,CAJE,CAKtBoB,eALsB,oBAKA,GAAIC,CAAAA,GAAJ,CAAQF,CAAC,CAACG,GAAF,CAAM,SAAAH,CAAC,QAAIA,CAAAA,CAAC,CAACX,MAAN,EAAP,CAAR,CALA,EAM5B,IAASe,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGH,eAAe,CAACjB,MAApC,CAA4CoB,CAAC,EAA7C,CAAgD,CACxCC,OADwC,CAC9B,CAD8B,CAE5C,IAASC,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGN,CAAC,CAAChB,MAAtB,CAA8BsB,CAAC,EAA/B,CAAkC,CAC9B,GAAIN,CAAC,CAACM,CAAD,CAAD,CAAKjB,MAAL,GAAgBY,eAAe,CAACG,CAAD,CAAnC,CAAuC,CACnCC,OAAO,EAAIL,CAAC,CAACM,CAAD,CAAD,CAAKnB,QAAhB,CACH,CACJ,CACKoB,UAPsC,CAOzB,CACf,SAAWN,eAAe,CAACG,CAAD,CADX,CAEf,OAASC,OAFM,CAPyB,CAW5CR,YAAY,CAACP,IAAb,CAAkBiB,UAAlB,EACH,CACJ,CACJ,CACKC,OAzBK,CAyBKX,YAAY,CAACY,IAAb,CAAkBlB,OAAlB,CAzBL,CA0BXmB,OAAO,CAACC,GAAR,CAAYH,OAAZ,EACMY,SA3BK,CA2BO,CACd,CAACP,IAAI,CAAEL,OAAO,CAAC,CAAD,CAAP,CAAWnB,MAAlB,CAA0ByB,OAAO,CAAEN,OAAO,CAAC,CAAD,CAAP,CAAW3B,IAA9C,CADc,CAEd,CAACgC,IAAI,CAAEL,OAAO,CAAC,CAAD,CAAP,CAAWnB,MAAlB,CAA0ByB,OAAO,CAAEN,OAAO,CAAC,CAAD,CAAP,CAAW3B,IAA9C,CAFc,CAGd,CAACgC,IAAI,CAAEL,OAAO,CAAC,CAAD,CAAP,CAAWnB,MAAlB,CAA0ByB,OAAO,CAAEN,OAAO,CAAC,CAAD,CAAP,CAAW3B,IAA9C,CAHc,CAId,CAACgC,IAAI,CAAEL,OAAO,CAAC,CAAD,CAAP,CAAWnB,MAAlB,CAA0ByB,OAAO,CAAEN,OAAO,CAAC,CAAD,CAAP,CAAW3B,IAA9C,CAJc,CAKd,CAACgC,IAAI,CAAEL,OAAO,CAAC,CAAD,CAAP,CAAWnB,MAAlB,CAA0ByB,OAAO,CAAEN,OAAO,CAAC,CAAD,CAAP,CAAW3B,IAA9C,CALc,CA3BP,CAkCX6B,OAAO,CAACC,GAAR,CAAYS,SAAZ,EAlCW,iCAmCJA,SAnCI,2DAAH,kBAARD,CAAAA,QAAQ,2CAAZ,CAsCA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAQvB,UAAR,CAAoBmB,YAApB,CAAkCE,MAAlC,CAA0CE,QAA1C,EACA","sourcesContent":["import React, { Component } from 'react';\nimport getMoodLog from './MoodData.js';\nimport { webLog } from './WebData.js';\n\nconst hourBeforeArray = (time) => {\n  var hba = [];\n  for (var i = 0; i < webLog.length; i++) {\n    var start = webLog[i].start;\n    var end = webLog[i].end;\n    //console.log(start);\n    if (start > (time - 3600) && start < time) {\n      var timeDiff = end - start;\n      const a = {\n        'domain': webLog[i].domain,\n        'timeDiff': timeDiff\n      }\n      hba.push(a);\n    }\n  }\n  return (hba);\n};\nfunction compare(a, b) {\n  const timeA = a.time;\n  const timeB = b.time;\n\n  let comparison = 0;\n  if (timeA > timeB) {\n    comparison = -1;\n  }\n  else if (timeA < timeB) {\n    comparison = 1;\n  }\n  return comparison;\n}\n\nvar getAnxious = async () => {\n    var timeByDomain = [];\n    const moodLog = await getMoodLog();\n    for (var i = 0; i < moodLog.length; i++){\n        if (moodLog[i].mood === 'Anxious'){\n            var time = moodLog[i].time;\n            // add conditional loop for if time < 3600\n            // x is the array of the web times for the hour leading up to the mood log\n            const x  = hourBeforeArray(time)\n            const distinctDomains = [...new Set(x.map(x => x.domain))];\n            for (var j = 0; j < distinctDomains.length; j++){\n                var domTime = 0;\n                for (var k = 0; k < x.length; k++){\n                    if (x[k].domain === distinctDomains[j]){\n                        domTime += x[k].timeDiff;\n                    }\n                }\n                const domainTime = {\n                    'domain' : distinctDomains[j],\n                    'time' : domTime\n                }\n                timeByDomain.push(domainTime);\n            }\n        }\n    }\n    const topFive = timeByDomain.sort(compare);\n    console.log(topFive);\n    const anxiousData = [\n        {name: topFive[0].domain, seconds: topFive[0].time},\n        {name: topFive[1].domain, seconds: topFive[1].time},\n        {name: topFive[2].domain, seconds: topFive[2].time},\n        {name: topFive[3].domain, seconds: topFive[3].time},\n        {name: topFive[4].domain, seconds: topFive[4].time},        \n    ]\n    console.log(anxiousData);\n    return(anxiousData);\n};\nvar getConfident = async () => {\n    var timeByDomain = [];\n    const moodLog = await getMoodLog();\n    for (var i = 0; i < moodLog.length; i++){\n        if (moodLog[i].mood === 'Confident'){\n            var time = moodLog[i].time;\n            // add conditional loop for if time < 3600\n            // x is the array of the web times for the hour leading up to the mood log\n            const x  = hourBeforeArray(time)\n            const distinctDomains = [...new Set(x.map(x => x.domain))];\n            for (var j = 0; j < distinctDomains.length; j++){\n                var domTime = 0;\n                for (var k = 0; k < x.length; k++){\n                    if (x[k].domain === distinctDomains[j]){\n                        domTime += x[k].timeDiff;\n                    }\n                }\n                const domainTime = {\n                    'domain' : distinctDomains[j],\n                    'time' : domTime\n                }\n                timeByDomain.push(domainTime);\n            }\n        }\n    }\n    const topFive = timeByDomain.sort(compare);\n    console.log(topFive);\n    const confidentData = [\n        {name: topFive[0].domain, seconds: topFive[0].time},\n        {name: topFive[1].domain, seconds: topFive[1].time},\n        {name: topFive[2].domain, seconds: topFive[2].time},\n        {name: topFive[3].domain, seconds: topFive[3].time},\n        {name: topFive[4].domain, seconds: topFive[4].time},        \n    ]\n    console.log(confidentData);\n    return(confidentData);\n};\nvar getSad = async () => {\n    var timeByDomain = [];\n    const moodLog = await getMoodLog();\n    for (var i = 0; i < moodLog.length; i++){\n        if (moodLog[i].mood === 'Sad'){\n            var time = moodLog[i].time;\n            // add conditional loop for if time < 3600\n            // x is the array of the web times for the hour leading up to the mood log\n            const x  = hourBeforeArray(time)\n            const distinctDomains = [...new Set(x.map(x => x.domain))];\n            for (var j = 0; j < distinctDomains.length; j++){\n                var domTime = 0;\n                for (var k = 0; k < x.length; k++){\n                    if (x[k].domain === distinctDomains[j]){\n                        domTime += x[k].timeDiff;\n                    }\n                }\n                const domainTime = {\n                    'domain' : distinctDomains[j],\n                    'time' : domTime\n                }\n                timeByDomain.push(domainTime);\n            }\n        }\n    }\n    const topFive = timeByDomain.sort(compare);\n    console.log(topFive);\n    const sadData = [\n        {name: topFive[0].domain, seconds: topFive[0].time},\n        {name: topFive[1].domain, seconds: topFive[1].time},\n        {name: topFive[2].domain, seconds: topFive[2].time},\n        {name: topFive[3].domain, seconds: topFive[3].time},\n        {name: topFive[4].domain, seconds: topFive[4].time},        \n    ]\n    console.log(sadData);\n    return(sadData);\n};\nvar getHappy = async () => {\n    var timeByDomain = [];\n    const moodLog = await getMoodLog();\n    for (var i = 0; i < moodLog.length; i++){\n        if (moodLog[i].mood === 'Happy'){\n            var time = moodLog[i].time;\n            // add conditional loop for if time < 3600\n            // x is the array of the web times for the hour leading up to the mood log\n            const x  = hourBeforeArray(time)\n            const distinctDomains = [...new Set(x.map(x => x.domain))];\n            for (var j = 0; j < distinctDomains.length; j++){\n                var domTime = 0;\n                for (var k = 0; k < x.length; k++){\n                    if (x[k].domain === distinctDomains[j]){\n                        domTime += x[k].timeDiff;\n                    }\n                }\n                const domainTime = {\n                    'domain' : distinctDomains[j],\n                    'time' : domTime\n                }\n                timeByDomain.push(domainTime);\n            }\n        }\n    }\n    const topFive = timeByDomain.sort(compare);\n    console.log(topFive);\n    const happyData = [\n        {name: topFive[0].domain, seconds: topFive[0].time},\n        {name: topFive[1].domain, seconds: topFive[1].time},\n        {name: topFive[2].domain, seconds: topFive[2].time},\n        {name: topFive[3].domain, seconds: topFive[3].time},\n        {name: topFive[4].domain, seconds: topFive[4].time},        \n    ]\n    console.log(happyData);\n    return(happyData);\n};\n\n// function anxiousRetrieved(moodLog) {\n//   // var timeByDomain = [];\n//   // console.log(typeof (moodLog));\n//   // console.log(`here ${moodLog}`);\n//   // console.log(moodLog.keys());\n\n//   console.log(moodLog);\n//   // console.log(Object.entries(moodLog));\n//   for (var key in moodLog) {\n//     console.log(moodLog[key]);\n//     //     console.log(moodLog[key]);\n//     //     if (moodLog[key].mood === 'Anxious'){\n//     //         var time = moodLog[key].time;\n//     //         // add conditional loop for if time < 3600\n//     //         // x is the array of the web times for the hour leading up to the mood log\n//     //         const x  = hourBeforeArray(time)\n//     //         console.log(x);\n//     //         const distinctDomains = [...new Set(x.map(x => x.domain))];\n//     //         console.log(distinctDomains);\n//     //         for (var j = 0; j < distinctDomains.length; j++){\n//     //             var domTime = 0;\n//     //             for (var k = 0; k < x.length; k++){\n//     //                 if (x[k].domain === distinctDomains[j]){\n//     //                     console.log('works!!!')\n//     //                     domTime += x[k].timeDiff;\n//     //                 }\n//     //             }\n//     //             const domainTime = {\n//     //                 'domain' : distinctDomains[j],\n//     //                 'time' : domTime\n//     //             }\n//     //             timeByDomain.push(domainTime);\n//     //         }\n//     //     }\n//     // }\n//     // const topFive = timeByDomain.sort(compare);\n//     // console.log(timeByDomain);\n//     // const anxiousData = [\n//     //     {name: topFive[0].domain, seconds: topFive[0].time},\n//     //     {name: topFive[1].domain, seconds: topFive[1].time},\n//     //     {name: topFive[2].domain, seconds: topFive[2].time},\n//     //     {name: topFive[3].domain, seconds: topFive[3].time},\n//     //     {name: topFive[4].domain, seconds: topFive[4].time},\n//     // ]\n//     //return(anxiousData);\n//   }\n//   return ([]);\n// }\n\n\n\n//ending here\n// const anxiousData = [\n//     {name: timeByDomain[0].domain, seconds: timeByDomain[0].time},\n//     {name: timeByDomain[1].domain, seconds: timeByDomain[1].time},\n//     {name: timeByDomain[2].domain, seconds: timeByDomain[2].time},\n//     {name: timeByDomain[3].domain, seconds: timeByDomain[3].time},\n//     {name: timeByDomain[4].domain, seconds: timeByDomain[4].time},\n// ]\n// };\n//export default tim;\n\n// // console.log(timeByDomain);\nexport {getAnxious, getConfident, getSad, getHappy}\n// export const timeByDom = getAnxious();\n"]},"metadata":{},"sourceType":"module"}