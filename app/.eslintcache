[{"/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/index.js":"1","/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/reportWebVitals.js":"2","/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/App.js":"3","/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/Components/LandingPage.js":"4","/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/Components/Home.js":"5","/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/Components/Nav.js":"6","/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/Components/Profile.js":"7","/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/Components/Data.js":"8","/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/Components/GetDate.js":"9","/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/Components/WebByMoodGraph.js":"10","/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/Components/WebsiteByMood.js":"11","/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/Components/MoodData.js":"12","/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/Components/WebData.js":"13","/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/Firebase.js":"14"},{"size":500,"mtime":1611984723213,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1611984723214,"results":"17","hashOfConfig":"16"},{"size":564,"mtime":1612416806100,"results":"18","hashOfConfig":"16"},{"size":1296,"mtime":1612416806102,"results":"19","hashOfConfig":"16"},{"size":840,"mtime":1612416806101,"results":"20","hashOfConfig":"16"},{"size":545,"mtime":1611984723210,"results":"21","hashOfConfig":"16"},{"size":1779,"mtime":1612416806104,"results":"22","hashOfConfig":"16"},{"size":368,"mtime":1612416806101,"results":"23","hashOfConfig":"16"},{"size":196,"mtime":1611984723207,"results":"24","hashOfConfig":"16"},{"size":4072,"mtime":1612416806104,"results":"25","hashOfConfig":"16"},{"size":2474,"mtime":1612416806106,"results":"26","hashOfConfig":"16"},{"size":939,"mtime":1612416806103,"results":"27","hashOfConfig":"16"},{"size":983,"mtime":1612416806105,"results":"28","hashOfConfig":"16"},{"size":815,"mtime":1612416850342,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"164c3b7",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/index.js",[],["64","65"],"/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/reportWebVitals.js",[],"/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/App.js",[],"/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/Components/LandingPage.js",[],"/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/Components/Home.js",[],"/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/Components/Nav.js",[],"/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/Components/Profile.js",[],"/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/Components/Data.js",[],"/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/Components/GetDate.js",["66"],"import React from 'react';\n\nconst today = new Date();\nconst month = today.getMonth() + 1;\nconst day = today.getDate();\nconst year = today.getFullYear();\nexport const date = month+'-'+day+'-'+year;","/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/Components/WebByMoodGraph.js",["67","68"],"import React, { useState, useEffect } from 'react';\nimport { getMoodData1 } from './WebsiteByMood.js'\nimport {\n    BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n// I only imported the elements of recharts that I needed, there are a lot more you can use\n\nfunction WebByMoodGraph() {\n\n    const [ loading, setLoading ] = useState(true)\n    const [ data1, setData1 ] = useState([])\n    const [ title1, setTitle1 ] = useState()\n    const [ data2, setData2 ] = useState([])\n    const [ title2, setTitle2 ] = useState()\n\n    useEffect(() => {\n        // Function to create buttons for each mood.\n        // It works but it might be better to just have it hard coded\n        // since it never changes\n        function CreateButtons() {\n            const allMoods = [\n                'Anxious', 'Confident', 'Sad', 'Happy', 'Tired', \n                'Energized', 'Frustrated', 'Calm', 'Connected', \n                'Distracted', 'Focused'\n            ]\n            let buttonSet1 = document.getElementById('buttonSet1');\n            let buttonSet2 = document.getElementById('buttonSet2');\n            for (var i = 0; i < allMoods.length; i++){\n                let newButton = document.createElement('button');\n                newButton.innerHTML = allMoods[i];\n                buttonSet1.appendChild(newButton);\n                newButton.addEventListener('click', setMoodData1)\n                newButton.className = allMoods[i];\n            }\n            for (var i = 0; i < allMoods.length; i++){\n                let newButton = document.createElement('button');\n                newButton.innerHTML = allMoods[i];\n                buttonSet2.appendChild(newButton);\n                newButton.addEventListener('click', setMoodData2)\n                newButton.className = allMoods[i];\n            }\n        }\n        // This function is where WebsiteByMood.js is called to collect the data\n        // we need for the graphs.\n        // I initially get Anxious and Focused just to have two graphs up to start.\n        // It is an async/await function so that it waits until \n        async function getData() {\n            const anxious = await getMoodData1('Anxious');\n            const focused = await getMoodData1('Focused');\n            setData1(anxious);\n            setTitle1('Anxious')\n            setData2(focused);\n            setTitle2('Focused')\n            CreateButtons();\n\n            setLoading(false);\n        }\n        if (loading) {\n            getData();\n        }\n    }, []);\n    // The empty array at the end of UseEffect makes it only run once\n    // per render and only rerenders on state change.\n\n    const setMoodData1 = async (e) => {\n        const mood = e.target.className;\n        const a = await getMoodData1(mood);\n        setData1(a);\n        setTitle1(mood);\n    }\n    const setMoodData2 = async (e) => {\n        const mood = e.target.className;\n        const a = await getMoodData1(mood);\n        setData2(a);\n        setTitle2(mood);\n    }\n    return(\n        <div>\n            <div id='buttonSet1'>\n            </div>\n            <h3>\n                Mood: {title1}\n            </h3>\n            <BarChart width={1000} height={500} data={data1} margin={{top: 5, right: 30, left: 20, bottom: 5}}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis/>\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"seconds\" fill=\"#8884d8\" />\n            </BarChart>\n            <br/>\n            <div id='buttonSet2'>\n            </div>\n            <h3>\n                Mood: {title2}\n            </h3>\n            <BarChart width={1000} height={500} data={data2} margin={{top: 5, right: 30, left: 20, bottom: 5}}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis/>\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"seconds\" fill=\"#8884d8\" />\n            </BarChart>\n        </div>\n    )\n}\nexport default WebByMoodGraph;","/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/Components/WebsiteByMood.js",["69","70"],"import React, { Component } from 'react';\nimport getMoodLog from './MoodData.js';\nimport getWebLog from './WebData.js';\n\n// hourBeforeArray creates an array with all of\n// the logged web visirs that a start time within one\n// hour before the time of the specified mood log\nconst hourBeforeArray = (time, webLog) => {\n  var hba = [];\n  for (var i = 0; i < webLog.length; i++) {\n    var start = webLog[i].start;\n    var end = webLog[i].end;\n    if (start > (time - 3600) && start < time) {\n      var timeDiff = end - start;\n      const a = {\n        'domain': webLog[i].domain,\n        'timeDiff': timeDiff\n      }\n      hba.push(a);\n    }\n  }\n  return (hba);\n};\n// This function is called to sort the objects in an array from most to least time by domain\nfunction compare(a, b) {\n  const timeA = a.time;\n  const timeB = b.time;\n\n  let comparison = 0;\n  if (timeA > timeB) {\n    comparison = -1;\n  }\n  else if (timeA < timeB) {\n    comparison = 1;\n  }\n  return comparison;\n}\n\n\nvar getMoodData1 = async (m) => {\n    var timeByDomain = [];\n    const mood = await m;\n    const moodLog = await getMoodLog();\n    const webLog = await getWebLog();\n    var x = []\n    for (var i = 0; i < moodLog.length; i++){\n        if (moodLog[i].mood === mood){\n            var time = moodLog[i].time;\n            // x is the array of the web times for the hour leading up to the mood log\n            const y = hourBeforeArray(time, webLog);\n            x = x.concat(y)\n        }\n    }\n    const distinctDomains = [...new Set(x.map(x => x.domain))];\n    for (var j = 0; j < distinctDomains.length; j++){\n        var domTime = 0;\n        for (var k = 0; k < x.length; k++){\n            if (x[k].domain === distinctDomains[j]){\n                domTime += x[k].timeDiff;\n            }\n        }\n        const domainTime = {\n            'domain' : distinctDomains[j],\n            'time' : domTime\n        }\n        timeByDomain.push(domainTime);\n    }\n    const sortedTimeByDomain = timeByDomain.sort(compare);\n    var topFive = [];\n    for (var l = 0; l < 5; l++){\n      if (sortedTimeByDomain[l] != null){\n        var twoEDomain = sortedTimeByDomain[l].domain;\n        var fixedDomain = twoEDomain.replaceAll('%2E', '.')\n        topFive[l] = {name: fixedDomain, seconds: sortedTimeByDomain[l].time}\n      }\n    }\n    if (topFive === undefined || topFive.length === 0){\n      topFive = [{name: `You have not logged ${mood} today`, seconds: 0}];\n    }\n    return(topFive);\n};\n\nexport {getMoodData1}\n\n","/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/Components/MoodData.js",["71"],"import React from 'react';\nimport { auth, database } from '../Firebase.js';\nimport { date } from './GetDate.js';\n\nasync function getMoodLog() {\n  const uid = auth.currentUser.uid;\n  var moods = [];\n  var moodObj = {};\n\n  const timeToInteger = (time) => {\n    var t = time.split(':');\n    for (var i = 0; i < t.length; i++) {\n      t[i] = parseInt(t[i]);\n    }\n    const timeAsInt = ((t[0] * 3600) + (t[1] * 60) + t[2]);\n    return (timeAsInt);\n  }\n\n    const ref = database.ref('moods/'+uid+'/'+date);\n    await ref.once('value', (snapshot) => {\n        snapshot.forEach((a) => {\n            const t = a.key;\n            const time = timeToInteger(t);\n            const m = a.val();\n            const mood = m[Object.keys(m)[0]];\n\n            moodObj = {\n                'time' : time,\n                'mood' : mood          \n            }\n            moods.push(moodObj);\n        })\n    })\n    return(moods);\n}\nexport default getMoodLog;\n","/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/Components/WebData.js",["72"],"import React from 'react';\nimport { auth, database } from '../Firebase.js';\nimport { date } from './GetDate.js';\n\nasync function getWebLog() {\n  const uid = auth.currentUser.uid;\n  var webs = [];\n  var webObj = {};\n\n  const timeToInteger = (time) => {\n    var t = time.split(':');\n    for (var i = 0; i < t.length; i++) {\n      t[i] = parseInt(t[i]);\n    }\n    const timeAsInt = ((t[0] * 3600) + (t[1] * 60) + t[2]);\n    return (timeAsInt);\n  }\n\n  const ref = database.ref('web/' + uid + '/' + date);\n  await ref.once('value', (snapshot) => {\n    snapshot.forEach((a) => {\n      const domain = a.key;\n      var intervals = a.val();\n      Object.keys(intervals).forEach(function (key) {\n        const start = timeToInteger(key);\n        const end = timeToInteger(intervals[key]);\n        webObj = {\n          'start': start,\n          'end': end,\n          'domain': domain\n        };\n        webs.push(webObj);\n      });\n  \n    });\n  });\n  return(webs);\n}\n\nexport default getWebLog;\n","/Users/stanleyjia/Documents/Eudaimonia/firebase-auth/auth-app/src/Firebase.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":8,"nodeType":"79","messageId":"80","endLine":1,"endColumn":13},{"ruleId":"81","severity":1,"message":"82","line":35,"column":22,"nodeType":"79","messageId":"83","endLine":35,"endColumn":23},{"ruleId":"84","severity":1,"message":"85","line":61,"column":8,"nodeType":"86","endLine":61,"endColumn":10,"suggestions":"87"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":8,"nodeType":"79","messageId":"80","endLine":1,"endColumn":13},{"ruleId":"77","severity":1,"message":"88","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":26},{"ruleId":"77","severity":1,"message":"78","line":1,"column":8,"nodeType":"79","messageId":"80","endLine":1,"endColumn":13},{"ruleId":"77","severity":1,"message":"78","line":1,"column":8,"nodeType":"79","messageId":"80","endLine":1,"endColumn":13},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-redeclare","'i' is already defined.","redeclared","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loading'. Either include it or remove the dependency array.","ArrayExpression",["91"],"'Component' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},"Update the dependencies array to be: [loading]",{"range":"94","text":"95"},[2513,2515],"[loading]"]